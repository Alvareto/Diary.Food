@using System.Web.Optimization
@using Diary.Web.Models.Common.Modals
@model Diary.Web.Models.Meals.EditMealModalViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div class="modal fade" id="MealEditModal" tabindex="-1" role="dialog" aria-labelledby="MealEditModalLabel" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            @Html.Partial("~/Views/Shared/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(L("EditMeal")))
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                <form name="MealEditForm" role="form" novalidate class="form-validation">
                    @Html.HiddenFor(model => model.Meal.Id)
                    <ul class="nav nav-tabs tab-nav-right" role="tablist">
                        <li role="presentation" class="active"><a href="#edit-meal-details" data-toggle="tab">@L("MealDetails")</a></li>
                        <li role="presentation"><a href="#edit-meal-ingredients" data-toggle="tab">@L("MealIngredients")</a></li>
                    </ul>
                    <div class="tab-content">
                        <div role="tabpanel" class="tab-pane animated fadeIn active" id="edit-meal-details">

                            <div class="row clearfix" style="margin-top: 10px;">
                                <div class="col-sm-12">
                                    <div class="form-group form-float">
                                        <div class="form-line">
                                            @Html.EditorFor(model => model.Meal.Name, new { htmlAttributes = new { @class = "validate form-control" } })
                                            <label for="name" class="form-label">@L("MealName")</label>
                                            @Html.LabelFor(model => model.Meal.Name, htmlAttributes: new { @class = "form-label" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="row clearfix" style="margin-top: 10px;">
                                <div class="col-sm-12">
                                    <div class="form-group form-float">
                                        <div class="form-line">
                                            @Html.EditorFor(model => model.Meal.Date, new { htmlAttributes = new { @class = "validate form-control" } })
                                            <label for="name" class="form-label">@L("MealName")</label>
                                            @Html.LabelFor(model => model.Meal.Date, htmlAttributes: new { @class = "form-label" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row clearfix" style="margin-top: 10px;">
                                <div class="col-sm-12">
                                    <div class="form-group form-float">
                                        <div class="form-line">
                                            <input id="date" type="date" name="Date" value="@Model.Meal.Date" required maxlength="32" class="validate form-control">
                                            <label for="date" class="form-label">@L("MealDate")</label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div role="tabpanel" class="tab-pane animated fadeIn" id="edit-meal-ingredients">
                            <div class="row">
                                <div class="col-sm-12 ">
                                    @foreach (var ingredient in Model.Ingredients)
                                    {
                                        <div class="col-sm-6">
                                            <input type="checkbox" name="ingredient" data-ingredient-id="@ingredient.Id" data-ingredient-name="@ingredient.Name" title="@ingredient.Name" class="filled-in" id="@string.Format("ingredient{0}", ingredient.Id)" @(Model.MealHasIngredient(ingredient) ? "checked" : "") />
                                            <label for="@string.Format("ingredient{0}", ingredient.Id)" title="@ingredient.Name">@ingredient.Name</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
                }
            </div>
            @Html.Partial("~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml")
            @*<script src="~/Views/Meals/_EditMealModal.js"></script>*@

        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Meal</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDeleted)
                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeleterUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeleterUserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeleterUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeletionTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeletionTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeletionTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastModificationTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastModificationTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastModificationTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastModifierUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastModifierUserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastModifierUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreationTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreationTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreationTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatorUserId, "CreatorUserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CreatorUserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreatorUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
